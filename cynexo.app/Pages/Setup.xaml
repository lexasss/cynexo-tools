<Page x:Class="Cynexo.App.Pages.Setup"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:utils="clr-namespace:Cynexo.App.Utils" 
      xmlns:local="clr-namespace:Cynexo.App" 
      xmlns:comm="clr-namespace:Cynexo.Communicator;assembly=Cynexo.Communicator" 
      xmlns:cntrl="clr-namespace:NumericUpDownLib;assembly=NumericUpDownLib"
      mc:Ignorable="d" 
      d:DesignHeight="500"
      d:DesignWidth="1000"
      DataContext="{Binding RelativeSource={RelativeSource Self}}"
      Title="Controller"
      Focusable="True"
      Loaded="Page_Loaded"
      Unloaded="Page_Unloaded">

    <Page.Resources>
        <utils:BoolToVisibilityConverter x:Key="bool2vis"/>
        <utils:BoolToPresenseConverter x:Key="bool2pres"/>
        <utils:ObjectToBoolConverter x:Key="object2bool"/>
        <utils:BoolInverseConverter x:Key="inverse"/>
        <sys:Boolean x:Key="inverted">True</sys:Boolean>

        <Style TargetType="{x:Type Label}">
            <Setter Property="Padding" Value="4,2,8,2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type Slider}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TickFrequency" Value="1"/>
            <Setter Property="IsSnapToTickEnabled" Value="True"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="MinWidth" Value="50"/>
        </Style>
        <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}">
            <Setter Property="Margin" Value="0,2,20,2"/>
        </Style>

        <Style x:Key="Channel" TargetType="{x:Type cntrl:NumericUpDown}" BasedOn="{StaticResource {x:Type cntrl:NumericUpDown}}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Value" Value="{Binding Path=(comm:Command.MinChannelID), Mode=OneTime}"/>
            <Setter Property="MaxValue" Value="{Binding Path=(comm:Command.MaxChannelID), Mode=OneTime}"/>
            <Setter Property="MinValue" Value="{Binding Path=(comm:Command.MinChannelID), Mode=OneTime}"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
        </Style>

        <Style TargetType="{x:Type WrapPanel}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="Wide" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="MinWidth" Value="120"/>
        </Style>

        <Style x:Key="HighLevel" TargetType="{x:Type StackPanel}">
            <Setter Property="DataContext" Value="{Binding HighLevelController, Mode=OneWay}"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsBusy}" Value="False"/>
                        <Condition Binding="{Binding IsVerbose}" Value="True"/>
                        <Condition Binding="{Binding IsManualCalibrationActive}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="True"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Arrow" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="4,0"/>
            <Setter Property="Padding" Value="4,0"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.LayoutTransform>
            <ScaleTransform x:Name="sctScale"/>
        </Grid.LayoutTransform>

        <TextBlock Grid.Row="0"
                   Style="{StaticResource PageTitle}"
                   Text="Sniff-0"/>

        <Grid Grid.Row="1" Margin="8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="686"/>
            </Grid.ColumnDefinitions>

            <TextBox x:Name="txbResponses" Grid.Column="0" Grid.RowSpan="2"
                     IsReadOnly="True"
                     BorderThickness="1"
                     VerticalContentAlignment="Top"
                     HorizontalScrollBarVisibility="Auto"
                     VerticalScrollBarVisibility="Visible"/>
            <WrapPanel Grid.Row="0" Grid.Column="0"
                       HorizontalAlignment="Right"
                       Margin="4,6,26,4">
                <Button Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                        Content="🗑"
                        Click="ClearLog_Click"/>
            </WrapPanel>

            <CheckBox x:Name="chkMode" Grid.Row="0" Grid.Column="1"
                      Style="{StaticResource Switch}"
                      Margin="8"
                      Tag="API"
                      IsChecked="True"
                      Content="High-level"
                      HorizontalAlignment="Stretch"
                      HorizontalContentAlignment="Center"/>
            <TabControl Grid.Row="1" Grid.Column="1"
                        Margin="8,0,0,0"
                        Padding="0,0,4,0"
                        Visibility="{Binding Path=IsChecked, ElementName=chkMode, Converter={StaticResource bool2vis}, ConverterParameter=True}">
                <TabItem Header="General">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" FontWeight="Bold">Function</Label>
                        <Label Grid.Column="1" FontWeight="Bold">Params</Label>

                        <Label Grid.Row="1" Grid.Column="0">Set verbose</Label>
                        <ToggleButton x:Name="tbnSetVerbose" Grid.Row="1" Grid.Column="2"
                              Content="Verbose"
                              Checked="SetVerbose_Toggled"
                              Unchecked="SetVerbose_Toggled"/>

                        <Label Grid.Row="2" Grid.Column="0">Set verbose LCD</Label>
                        <ToggleButton Name="tbnSetVerboseLCD" Grid.Row="2" Grid.Column="2"
                            Content="Verbose"
                            IsChecked="True"
                            Checked="SetVerboseLCD_Toggled"
                            Unchecked="SetVerboseLCD_Toggled"/>

                        <Label Grid.Row="3" Grid.Column="0">Set clear air channel</Label>
                        <cntrl:NumericUpDown x:Name="nudSetCAChannel" Grid.Row="3" Grid.Column="1"
                                             Style="{StaticResource Channel}"
                                             MinValue="1"
                                             Value="{Binding Path=(comm:Command.MaxChannelID), Mode=OneTime}"/>
                        <Button Grid.Row="3" Grid.Column="2"
                            Content="Set"
                            Click="SetCAChannel_Click"/>

                        <Label Grid.Row="4" Grid.Column="0">All solenoid valves</Label>
                        <WrapPanel Grid.Row="4" Grid.Column="1">
                            <RadioButton x:Name="rdbOpenValves" GroupName="OpenCloseValves" Content="opened"/>
                            <RadioButton x:Name="rdbCloseValves" GroupName="OpenCloseValves" Content="closed" IsChecked="True"/>
                        </WrapPanel> 
                        <Button Grid.Row="4" Grid.Column="2"
                            Content="Set"
                            Click="OpenCloseValves_Click"/>
                    </Grid>
                </TabItem>

                <TabItem Header="Calibration">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" FontWeight="Bold">Function</Label>
                        <Label Grid.Column="1" FontWeight="Bold">Params</Label>

                        <Label Grid.Row="1" Grid.Column="0">
                            <Label.Content>
                                <TextBlock>Calibrate channel<LineBreak/>flows automatically</TextBlock>
                            </Label.Content>
                        </Label>
                        <WrapPanel x:Name="wplCalibration" Grid.Row="1" Grid.Column="1">
                            <StackPanel Margin="0,0,20,0">
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel0" Content="channel 0" Tag="0"
                                              Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel0Flow" Text="1.0" Tag="0"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel1" Content="channel 1" Tag="1"
                                              Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel1Flow" Text="1.0" Tag="1"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel2" Content="channel 2" Tag="2"
                                              Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel2Flow" Text="1.0" Tag="2"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel3" Content="channel 3" Tag="3"
                                              Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel3Flow" Text="1.0" Tag="3"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel4" Content="channel 4" Tag="4"
                                              Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel4Flow" Text="1.0" Tag="4"/>
                                </WrapPanel>
                            </StackPanel>
                            <StackPanel Margin="0,0,20,0">
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel5" Content="channel 5" Tag="5"
                                              Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel5Flow" Text="1.0" Tag="5"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel6" Content="channel 6" Tag="6"
                                              Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel6Flow" Text="1.0" Tag="6"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel7" Content="channel 7" Tag="7"
                                              Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel7Flow" Text="1.0" Tag="7"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel8" Content="channel 8" Tag="8"
                                              Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel8Flow" Text="1.0" Tag="8"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel9" Content="channel 9" Tag="9"
                                              Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel9Flow" Text="1.0" Tag="9"/>
                                </WrapPanel>
                            </StackPanel>
                            <StackPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel10" Content="channel 10" Tag="10" Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel10Flow" Text="1.0" Tag="11"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel11" Content="channel 11" Tag="11" Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel11Flow" Text="1.0" Tag="11"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel12" Content="channel 12" Tag="12" Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel12Flow" Text="1.0" Tag="12"/>
                                </WrapPanel>
                                <WrapPanel>
                                    <CheckBox x:Name="chkCalibChannel13" Content="channel 13" Tag="13" Checked="CalibChannel_Toggled" Unchecked="CalibChannel_Toggled"/>
                                    <TextBox x:Name="txbCalibChannel13Flow" Text="1.0" Tag="13"/>
                                </WrapPanel>
                            </StackPanel>
                        </WrapPanel>
                        <Button x:Name="btnStartCalibration" Grid.Row="1" Grid.Column="2"
                            Content="Start"
                                IsEnabled="False"
                            Click="SetFlow_Click"/>

                        <Label Grid.Row="2" Grid.Column="0">Calibrate manually</Label>
                        <Grid Grid.Row="2" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="channel"/>
                            <cntrl:NumericUpDown x:Name="nudCalibrateManually" Style="{StaticResource Channel}" Grid.Column="1"/>
                        </Grid>
                        <Button Grid.Row="2" Grid.Column="2"
                            Content="Start"
                            Click="CalibrateManually_Click"/>

                        <Label Grid.Row="3" Grid.Column="0">Stop calibration</Label>
                        <Button Grid.Row="3" Grid.Column="2"
                            Content="Stop"
                            Click="StopCalibration_Click"/>

                        <Label Grid.Row="4" Grid.Column="0">Test delay</Label>
                        <Grid Grid.Row="4" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="channel"/>
                            <cntrl:NumericUpDown x:Name="nudTestDelay" Style="{StaticResource Channel}" Grid.Column="1"/>
                        </Grid>
                        <Button Grid.Row="4" Grid.Column="2"
                            Content="Start"
                            Click="TestDelay_Click"/>
                    </Grid>
                </TabItem>

                <TabItem Header="Channel operations">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" FontWeight="Bold">Function</Label>
                        <Label Grid.Column="1" FontWeight="Bold">Params</Label>
                        <Label Grid.Column="2" FontWeight="Bold">Trigger</Label>

                        <Label Grid.Row="1" Grid.Column="0">Set channel</Label>
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="channel"/>
                            <cntrl:NumericUpDown x:Name="nudSetChannel" Style="{StaticResource Channel}" Grid.Column="1"/>
                        </Grid>
                        <Button Grid.Row="1" Grid.Column="3"
                            Content="Set"
                            Click="SetChannel_Click"/>

                        <Label Grid.Row="2" Grid.Column="0">Read flow</Label>
                        <Button Grid.Row="2" Grid.Column="3"
                            Content="Read"
                            Click="ReadFlow_Click"/>

                        <Label Grid.Row="3" Grid.Column="0">Set valve</Label>
                        <WrapPanel Grid.Row="3" Grid.Column="1">
                            <RadioButton x:Name="rdbSetValveOpened" GroupName="SetValve" Content="opened" IsChecked="True"/>
                            <RadioButton x:Name="rdbSetValveClosed" GroupName="SetValve" Content="closed"/>
                        </WrapPanel>
                        <WrapPanel Grid.Row="3" Grid.Column="2"
                                   HorizontalAlignment="Center">
                            <CheckBox x:Name="chkSetValveTrigger"
                                      Width="24"
                                      Height="24"/>
                        </WrapPanel>
                        <Button Grid.Row="3" Grid.Column="3"
                            Content="Set"
                            Click="SetValve_Click"/>

                        <Label Grid.Row="4" Grid.Column="0">Set motor direction</Label>
                        <WrapPanel Grid.Row="4" Grid.Column="1">
                            <RadioButton x:Name="rdbSetMotorDirectionToOpen" GroupName="SetMotorDirection" Content="to open" IsChecked="True"/>
                            <RadioButton x:Name="rdbSetMotorDirectionToClose" GroupName="SetMotorDirection" Content="to close"/>
                        </WrapPanel>
                        <Button Grid.Row="4" Grid.Column="3"
                            Content="Set"
                            Click="SetMotorDirection_Click"/>

                        <Label Grid.Row="5" Grid.Column="0">Run motor steps</Label>
                        <Grid Grid.Row="5" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="steps"/>
                            <Label Grid.Column="1" Content="{Binding Value, ElementName=sldRunMotorSteps}"/>
                            <Slider Grid.Column="2" x:Name="sldRunMotorSteps" Minimum="1" Maximum="15"/>
                        </Grid>
                        <Button Grid.Row="5" Grid.Column="3"
                            Content="Run"
                            Click="RunMotorSteps_Click"/>

                        <Label Grid.Row="6" Grid.Column="0">Open valve for (ms)</Label>
                        <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal">
                            <TextBox x:Name="txbOpenValve" 
                                     VerticalAlignment="Center"
                                     Text="500"/>
                            <TextBlock Text="ms"/>
                            <WrapPanel Margin="18,0,0,0">
                                <RadioButton x:Name="rdbOpenValveSimple" GroupName="OpenValve" Content="normal" IsChecked="True"/>
                                <RadioButton x:Name="rdbOpenValveNoCA" GroupName="OpenValve" Content="no clear air"/>
                                <RadioButton x:Name="rdbOpenValveNoCF" GroupName="OpenValve" Content="no constant flow"/>
                            </WrapPanel>
                        </StackPanel>
                        <WrapPanel Grid.Row="6" Grid.Column="2"
                                   HorizontalAlignment="Center">
                            <CheckBox x:Name="chkOpenValveTrigger"
                                      Width="24"
                                      Height="24"/>
                        </WrapPanel>
                        <Button Grid.Row="6" Grid.Column="3"
                            Content="Open"
                            Click="OpenValve_Click"/>
                    </Grid>
                </TabItem>

                <TabItem Header="Triggers">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" FontWeight="Bold">Function</Label>
                        <Label Grid.Column="1" FontWeight="Bold">Params</Label>

                        <Label Grid.Row="1" Grid.Column="0">Set trigger-out delay</Label>
                        <WrapPanel Grid.Row="1" Grid.Column="1">
                            <TextBox x:Name="txbSetTriggerOutDelay" Text="5"/>
                            <TextBlock Text="ms"/>
                        </WrapPanel>
                        <Button Grid.Row="1" Grid.Column="2"
                            Content="Set"
                            Click="SetTriggerOutDelay_Click"/>

                        <Label Grid.Row="2" Grid.Column="0">Set trigger-out duration</Label>
                        <WrapPanel Grid.Row="2" Grid.Column="1">
                            <TextBox x:Name="txbSetTriggerOutDuration" Text="5"/>
                            <TextBlock Text="ms"/>
                        </WrapPanel>
                        <Button Grid.Row="2" Grid.Column="2"
                            Content="Set"
                            Click="SetTriggerOutDuration_Click"/>

                        <Label Grid.Row="3" Grid.Column="0">Test trigger-out</Label>
                        <Button Grid.Row="3" Grid.Column="2"
                            Content="Test"
                            Click="TestTriggerOut_Click"/>

                        <Label Grid.Row="4" Grid.Column="0">Test trigger-in</Label>
                        <Button Grid.Row="4" Grid.Column="2"
                            Content="Test"
                            Click="TestTriggerIn_Click"/>

                        <Label Grid.Row="5" Grid.Column="0">Loop trigger</Label>
                        <TextBlock Grid.Row="5" Grid.Column="1" TextWrapping="Wrap">Connect the trigger IN connector with the trigger OUT 
                            connector via a standard BNC male to male cable</TextBlock>
                        <Button Grid.Row="5" Grid.Column="2"
                            Content="Run"
                            Click="LoopTrigger_Click"/>

                    </Grid>
                </TabItem>

                <TabItem Header="Spir-0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" FontWeight="Bold">Function</Label>
                        <Label Grid.Column="1" FontWeight="Bold">Params</Label>
                        <Label Grid.Column="2" FontWeight="Bold">Trigger #2</Label>

                        <Label Grid.Row="1" Grid.Column="0">Open valve on</Label>
                        <WrapPanel Grid.Row="1" Grid.Column="1">
                            <ComboBox x:Name="cmbOpenValveOn" MinWidth="60" MinHeight="28">
                                <ComboBoxItem Content="inhale" IsSelected="True"/>
                                <ComboBoxItem Content="exhale"/>
                            </ComboBox>
                            <Label Content="channel:"/>
                            <cntrl:NumericUpDown x:Name="nudOpenValveOn" Style="{StaticResource Channel}" Grid.Column="1"/>
                            <Label Content="duration:"/>
                            <TextBox x:Name="txbOpenValveOnDuration" Text="500"/>
                            <Label Content="ms"/>
                            <Label Content="delay:"/>
                            <TextBox x:Name="txbOpenValveOnDelay" Text="500"/>
                            <Label Content="ms"/>
                        </WrapPanel>
                        <WrapPanel Grid.Row="1" Grid.Column="2"
                                   HorizontalAlignment="Center">
                            <CheckBox x:Name="chkOpenValveOnSecondTrigger"
                                      Width="24"
                                      Height="24"/>
                        </WrapPanel>
                        <Button Grid.Row="1" Grid.Column="3"
                            Content="Open"
                            Click="OpenValveOn_Click"/>

                        <StackPanel Grid.Row="2" Grid.Column="0">
                            <Label>Open valve</Label>
                            <Label>and make sound</Label>
                        </StackPanel>
                        <WrapPanel Grid.Row="2" Grid.Column="1">
                            <ComboBox x:Name="cmbOpenValveSound" MinWidth="60" MinHeight="28">
                                <ComboBoxItem Content="after" IsSelected="True"/>
                                <ComboBoxItem Content="before"/>
                            </ComboBox>
                            <Label Content="channel:"/>
                            <cntrl:NumericUpDown x:Name="nudOpenValveSound" Style="{StaticResource Channel}" Grid.Column="1"/>
                            <Label Content="duration:"/>
                            <TextBox x:Name="txbOpenValveSoundDuration" Text="500"/>
                            <Label Content="ms"/>
                            <Label Content="delay:"/>
                            <TextBox x:Name="txbOpenValveSoundDelay" Text="500"/>
                            <Label Content="ms"/>
                        </WrapPanel>
                        <WrapPanel Grid.Row="2" Grid.Column="2"
                                   HorizontalAlignment="Center">
                            <CheckBox x:Name="chkOpenValveSoundSecondTrigger"
                                      Width="24"
                                      Height="24"/>
                        </WrapPanel>
                        <Button Grid.Row="2" Grid.Column="3"
                            Content="Open"
                            Click="OpenValveSound_Click"/>
                    </Grid>
                </TabItem>
            </TabControl>

            <StackPanel x:Name="stpHighLevel" Grid.Row="1" Grid.Column="1"
                        HorizontalAlignment="Center"
                        Visibility="{Binding Path=IsChecked, ElementName=chkMode, Converter={StaticResource bool2vis}}" Margin="0,6,0,-6">

                <StackPanel DataContext="{Binding HighLevelController}"
                            Visibility="{Binding IsVerbose, Converter={StaticResource bool2pres}, ConverterParameter={StaticResource inverted}}">
                    <CheckBox Content="Verbose"
                          Height="26"
                          HorizontalAlignment="Center"
                          ToolTip="Verbose mode must be ON to continue using the high-level functionality"
                          IsChecked="{Binding IsVerbose, Mode=TwoWay}"/>
                </StackPanel>

                <StackPanel DataContext="{Binding HighLevelController}"
                            Visibility="{Binding IsVerbose, Converter={StaticResource bool2pres}}">
                    <CheckBox Style="{StaticResource Switch}"
                              Tag="Control"
                              IsChecked="{Binding IsCalibrationMode, Mode=TwoWay}"
                              IsEnabled="{Binding CanChangeMode, Mode=OneWay}"
                              Content="Calibration"
                              Margin="0,8"
                              HorizontalAlignment="Stretch"
                              HorizontalContentAlignment="Center"/>
                    <Separator/>
                </StackPanel>

                <StackPanel Style="{StaticResource HighLevel}"
                            Visibility="{Binding IsVerbose, Converter={StaticResource bool2pres}}">
                    <Grid Margin="0,0,0,4"
                          HorizontalAlignment="Center">
                        <Label Content="Automatic calibration"
                               Visibility="{Binding IsCalibrationMode, Converter={StaticResource bool2pres}}"/>
                        <Label Content="Channels"
                               Visibility="{Binding IsCalibrationMode, Converter={StaticResource bool2pres}, ConverterParameter={StaticResource inverted}}"/>
                    </Grid>
                    <WrapPanel x:Name="wplChannels" Grid.Row="1" Grid.Column="1">
                        <StackPanel Margin="0,0,20,0">
                            <local:Channel ID="0"/>
                            <local:Channel ID="1"/>
                            <local:Channel ID="2"/>
                            <local:Channel ID="3"/>
                            <local:Channel ID="4"/>
                        </StackPanel>
                        <StackPanel Margin="0,0,20,0">
                            <local:Channel ID="5"/>
                            <local:Channel ID="6"/>
                            <local:Channel ID="7"/>
                            <local:Channel ID="8"/>
                            <local:Channel ID="9"/>
                        </StackPanel>
                        <StackPanel>
                            <local:Channel ID="10"/>
                            <local:Channel ID="11"/>
                            <local:Channel ID="12"/>
                            <local:Channel ID="13"/>
                        </StackPanel>
                    </WrapPanel>

                    <Grid HorizontalAlignment="Center"
                          Margin="0,8">
                        <StackPanel HorizontalAlignment="Center"
                                    Visibility="{Binding IsCalibrationMode, Converter={StaticResource bool2vis}}">
                            <Button Style="{StaticResource Wide}"
                                    IsEnabled="{Binding CanAutoCalibrate}"
                                    Content="Calibrate"
                                    Click="HLCalibrate_Click"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>

                <StackPanel DataContext="{Binding HighLevelController}">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsVerbose}" Value="True"/>
                                        <Condition Binding="{Binding IsCalibrationMode}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    
                    <Separator/>
                    <Label Content="Manual calibration"
                           HorizontalAlignment="Center"/>
                    <WrapPanel HorizontalAlignment="Center"
                               Margin="0,8">
                        <WrapPanel.Resources>
                            <Style x:Key="ComboBox_PopupScrollableContent" TargetType="StackPanel" BasedOn="{StaticResource ComboBox_PopupScrollableContent}">
                                <Setter Property="Orientation" Value="Horizontal"/>
                                <Setter Property="Background" Value="White"/>
                            </Style>
                            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                <Setter Property="Margin" Value="4"/>
                            </Style>
                        </WrapPanel.Resources>

                        <Label Content="Channel"/>
                        <ComboBox x:Name="cmbChannels"
                                  ItemsSource="{Binding ChannelIDs, Mode=OneWay}"
                                  IsEnabled="{Binding IsManualCalibrationActive, Converter={StaticResource inverse}}"
                                  Width="46">
                        </ComboBox>
                        <Button x:Name="btnManualCalibration"
                                Content="Open"
                                Width="66"
                                Click="HLManualCalibration_Click">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=cmbChannels, Path=SelectedItem, Converter={StaticResource object2bool}}" Value="True"/>
                                                <Condition Binding="{Binding IsBusy}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Label x:Name="lblFlow"
                               FontFamily="Consolas"
                               FontSize="16"
                               Width="66"
                               HorizontalContentAlignment="Center"
                               Content="0.00"/>
                        <Grid Margin="0,2">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="1"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0" 
                                    Style="{StaticResource Arrow}"
                                    IsEnabled="{Binding IsManualCalibrationActive}"
                                    Content="⩓"
                                    ToolTip="Increase the flow"
                                    Click="HLIncreaseFlow_Click"/>
                            <Button Grid.Row="2" 
                                    Style="{StaticResource Arrow}"
                                    IsEnabled="{Binding IsManualCalibrationActive}"
                                    Content="⩔"
                                    ToolTip="Decrease the flow"
                                    Click="HLDecreaseFlow_Click"/>
                        </Grid>
                        <Slider x:Name="sldAdjustmentStep2"
                                Width="100"
                                Minimum="4"
                                Maximum="30"
                                LargeChange="5"
                                SmallChange="2"
                                Value="{Binding ValveMotorAdjustmentSteps, Mode=TwoWay}"
                                TickPlacement="Both"/>
                        <Label Content="{Binding ElementName=sldAdjustmentStep2, Path=Value, Mode=OneWay}"
                               Width="26"/>
                    </WrapPanel>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Label x:Name="lblZoom" Style="{StaticResource ZoomIndicator}"/>
        <Label x:Name="lblDebug" Style="{StaticResource DebugWarning}" Visibility="Collapsed"/>
    </Grid>
</Page>
